// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package source

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigAwsAccessKeyId     = "aws.accessKeyId"
	ConfigAwsBucket          = "aws.bucket"
	ConfigAwsRegion          = "aws.region"
	ConfigAwsSecretAccessKey = "aws.secretAccessKey"
	ConfigPollingPeriod      = "pollingPeriod"
	ConfigPrefix             = "prefix"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigAwsAccessKeyId: {
			Default:     "",
			Description: "AWS access key id.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigAwsBucket: {
			Default:     "",
			Description: "the AWS S3 bucket name.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigAwsRegion: {
			Default:     "",
			Description: "the AWS S3 bucket region",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigAwsSecretAccessKey: {
			Default:     "",
			Description: "AWS secret access key.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigPollingPeriod: {
			Default:     "1s",
			Description: "polling period for the CDC mode, formatted as a time.Duration string.",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		ConfigPrefix: {
			Default:     "",
			Description: "the S3 key prefix.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
	}
}
